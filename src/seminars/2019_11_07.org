#+TITLE: 2019/11/07
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org.css" />
#+HTML_HEAD: <style>div.figure img {max-height:300px;max-width:900px;}</style>
#+HTML_HEAD_EXTRA: <style>.org-src-container {background-color: #303030; color: #e5e5e5;}</style>

* =$PATH=, переменные окружения, как изменить поведение терминала
  Может вы еще не знаете, но терминал в Linux - это диалог с системой
  программирования на языке [[https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29][Bash]]. В нем можно писать циклы, определять
  переменные с тем, чтобы писать скрипты. 

  Когда вы запустили терминал, в нем уже определены некоторые
  переменные. Эти переменные определяют поведение системы. Сейчас нам
  нужно изменить переменную =PATH=. В этой переменной хранится
  список директорий, где система будет искать программы. Когда вы
  набирайте =firefo= и жмете следом =TAB=, терминал дополняет =firefo=
  до слова =firefox=, поскольку знает, что первым словом указывается
  название программы, а программа =firefox= лежит не где-то в
  неизвестной директории, а в директории, которая есть в переменной
  =PATH=. 

  Вы можете посмотреть значение переменной =PATH=:
  #+BEGIN_SRC sh
    echo $PATH
    # /run/wrappers/bin:/run/current-system/sw/bin
  #+END_SRC

  На прошлом семинаре мы поставили [[https://dat.foundation/][dat]] с помощью [[https://www.npmjs.com/][npm]] в директорию
  =~/.npm-packages/bin=. Нам пришлось настроить =npm=, сделав правку в
  файле =~/.npmrc=. Многие заметили, что система не способна найти
  программу =dat=:
  
  #+BEGIN_SRC sh
    dat
    # sh: line 1: dat: command not found
  #+END_SRC

  #+RESULTS:

  Чтобы запустить =dat=, приходилось указывать полный путь к программе
  от домашней директории:

  #+BEGIN_SRC sh
    ~/.npm-packages/bin/dat
    # Usage: dat <cmd> [<dir>] [options]
    # 
    # Sharing Files:
    #    dat share                   create dat, import files, share to network
    #    dat create                  create empty dat and dat.json
    #    dat sync                    import files to existing dat & sync with network
  #+END_SRC

  Естественное желание - изменить переменную =PATH= так, чтобы
  терминал автоматически находил команду dat.

  Кратковременный эффект можно получить, выполнив в терминале:
  #+BEGIN_SRC sh
    export PATH=$HOME/.npm-packages:$PATH
  #+END_SRC

  Теперь =dat= можно запустить, набрав в этом-же терминале просто
  =dat=. Однако в другом терминале придется заново изменять значение
  =PATH=. 

  Вы обратили внимание на переменную =HOME=? Посмотрите, чему
  равно ее значение. Определите значение переменной =QWER= равное
  "world". Проверьте значение =QWER=. Выполните:
  #+BEGIN_SRC sh
    export QWER="hello "$QWER
  #+END_SRC
  Посмотрите теперь на значение =QWER=.

  Можно ли избавиться от постоянных переопределений переменной =PATH=?
  
  Оказывается при запуске терминала система пытается выполнить
  программу на языке =bash= в файлике =~/.bashrc=. Правка этого файла
  может коренным образом поменять поведение терминала.

  Добавьте в этот файл строку:
  #+BEGIN_SRC sh
    export PATH=$HOME/.npm-packages:$PATH
  #+END_SRC

  Теперь в любом терминале вы сможете быстро запустить =dat=.

** Что почитать
   - Глава 11 в книге: Командная строка Linux. Полное руководство. Уильям Шоттс.
   - [[https://habr.com/ru/post/471242/][Введение в Bash Shell]] на Habr

* Список вопросов и проблем
** TODO Полезные команды в терминале
   - echo $foo :: посмотреть значение переменной foo
   - env :: посмотреть список всех переменных
   - export foo=5 :: положить в переменную foo значение 5

** Вопрос: Как выйти из emacs Ответ: =C-x-c=

** TODO Проблема: инструкция по tmux затерялась в прошлом семинаре
   Не все ее могут найти. Особенно те, кто не собирается смотреть историю семинаров
   Решение: вынести ее на главную страницу сайта

** TODO Компьютерная графика p5js

** TODO Как ставить timestamp в org-mode?
   Сочетание =C-u C-c .=

** TODO Как получать документацию по Emacs, Info, org-mode
   <2019-11-07 Thu 20:38>

** TODO Научится писать программы на Pascal и C

** TODO Как сделать так, чтобы результат компиляции кода на С выдавался непосредственно а не через создающийся выходной файл
   <2019-11-07 Thu 20:51>

** TODO Пишем код на Pascal
   <2019-11-07 Thu 20:54> 
   Есть два способа:
     1. Пишем в отдельном фале
     2. Пишем тут в org-mode

*** TODO В отдельном [[./2019_11_07/hello.pas][hello.pas]] 

**** Редактирование фала + компиляция + запуск

*** Пишем прямо тут
    #+BEGIN_SRC pascal
      var
      x, i:integer;

      begin
	 x:=1;
	 for i:=1 to 100 do begin
	    writeln(x);
	    x:=x+1;
	 end;
      end.
    #+END_SRC

*** TODO Видюшки по emacs где кодят на C и голосом
*** TODO Потребовалось поставить vscode. Как менять NixOS?
    <2019-11-07 Thu 21:12>

*** TODO Сделать ссылку на конфиг NixOS


